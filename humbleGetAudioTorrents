#!/usr/bin/env fish

### USAGE INSTRUCTIONS ###########################################################################
# To authenticate with the tool, first use this command:                                         #
# humblebundle --username 'user@mail.com' --password 'secret' [--code 'XXXXXXX'] --update --list #
# --code is the email verification code, use only if asked.                                      #
##################################################################################################

### DEPENDENCIES #################################################
# relies on crazy humble bundle api command line tool from here: #
# https://github.com/MestreLion/humblebundle                     #
# Also uses:                                                     #
# -fish shell                                                    #
##################################################################

### SETTINGS #####################################################
set params -p 'audio' -b #platform = audio, -b=bittorrent  #
#set root (dirname (status -f)) #working folder                  #
set root (pwd) #working folder                                   #
##################################################################

set errorfile $root/not-downloaded.txt
set gamesfile $root/games.txt
set tmpfile $root/tmp.txt
set result 0

if [ -f $errorfile ]
	rm $errorfile #remove old error file
end

# fetch games list into file
humblebundle --update --list > $gamesfile
if [ $status -eq 1 ] #caching error, are you authenticated?
	echo "=== ERROR OCCURED: END SCRIPT ==="
	exit 1
end

# download
#set counter 0
for game in (cat $gamesfile)
	humblebundle $params -t 'FLAC' --download $game
	set success $status

	if [ $success -ne 0 ] #error? Maybe MP3 only, let's try it.
		echo "FLAC failed. Trying MP3"
		humblebundle $params -t 'MP3' --download $game > $tmpfile ^ $tmpfile
		set success $status

		if [ $success -ne 0 ] #again an error. Also no MP3?
			echo "MP3 also failed. Writing to logfile."
        	        echo $game >> $errorfile #log game name
			cat $tmpfile >> $errorfile #log debug information
			set result 1 #note that some games were not downloaded by exiting with 1
		end
        end
	#if [ $counter -ge 60 ]
	#	exit 0
	#end
	#set counter (math $counter + 1)
end

rm $tmpfile
exit $result

